# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.git*'
      - 'doc/**'
      - 'emacs/**'
      - 'vim/**'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.git*'
      - 'doc/**'
      - 'emacs/**'
      - 'vim/**'
  schedule:
    - cron: '0 12 */6 * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 4.13.x
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        if: runner.os != 'Windows'
        with:
          # Version of the OCaml compiler to initialise
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-repositories: |
            default: https://github.com/ocaml/opam-repository.git
            beta: https://github.com/ocaml/ocaml-beta-repository.git

      - name: Set up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        if: runner.os == 'Windows'
        with:
          # Version of the OCaml compiler to initialise
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-repositories: |
            default: https://github.com/fdopen/opam-repository-mingw.git#opam2
            beta: https://github.com/ocaml/ocaml-beta-repository.git

      - name: Install dependencies
        run: |
          opam depext conf-jq --yes # opam depext bug
          opam pin menhirLib 20201216
          opam install . --deps-only --with-test

      - name: Build and test in release mode
        run: opam exec -- dune runtest -p merlin,dot-merlin-reader

      - name: Build in dev mode to check parser changes
        if: matrix.os == 'ubuntu-latest'
        run: |
          opam exec -- dune build
          git diff --exit-code

# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ 504 ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.git*'
      - 'doc/**'
      - 'emacs/**'
      - 'vim/**'
      - '**/emacs-lint.yml'
  pull_request:
    branches: [ 504 ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.git*'
      - 'doc/**'
      - 'emacs/**'
      - 'vim/**'
      - '**/emacs-lint.yml'
  schedule:
    - cron: '0 12 */6 * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - ocaml-base-compiler.5.4.0+trunk
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Some tests requiring specific ppxes are disabled by default
    env:
      MERLIN_TESTS: no-ppx

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout tree
        uses: actions/checkout@v4

      - name: Set-up OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Install dependencies
        run: |
          opam pin menhirLib 20201216 --no-action
          opam install menhir csexp alcotest yojson conf-jq ocamlfind --yes

      - name: Build and test in release mode
        run: |
          opam exec -- dune runtest -p merlin-lib,dot-merlin-reader,ocaml-index,merlin

      - name: Build in dev mode to check parser changes
        if: matrix.os == 'ubuntu-latest'
        run: |
          opam exec -- dune clean
          opam exec -- dune build
          git diff --exit-code


      - name: Check that the changes are correctly formatted
        if: matrix.os == 'none'
        run: |
          opam install ocamlformat.0.27.0
          opam exec -- dune build @fmt
